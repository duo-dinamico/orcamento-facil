"""initial migration

Revision ID: 3f195dae23de
Revises: 
Create Date: 2024-05-23 18:40:36.665374

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "3f195dae23de"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "categories",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False, unique=True),
        sa.Column("category_type", sa.Enum("NEED", "WANT", "SAVINGS", "DEBT", name="categorytypeenum"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.execute("CREATE INDEX ix_category_name ON categories (lower(name))")
    op.create_table(
        "currencies",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False, unique=True),
        sa.Column("symbol", sa.String(), nullable=False, unique=True),
        sa.Column("code", sa.String(), nullable=False, unique=True),
        sa.Column("symbol_position", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.execute("CREATE INDEX ix_currencies_name_symbol_code ON currencies (lower(name), lower(symbol), lower(code))")
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=False, unique=True),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("personal_key", sa.LargeBinary(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.execute("CREATE INDEX ix_users_username ON users (lower(username))")
    op.create_table(
        "accounts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False, unique=True),
        sa.Column("account_type", sa.Enum("DEBIT", "CARD", "CASH", name="accounttypeenum"), nullable=False),
        sa.Column("currency_id", sa.Integer(), nullable=False),
        sa.Column("balance", sa.Integer(), nullable=False),
        sa.Column("credit_limit", sa.Integer(), nullable=True),
        sa.Column("payment_day", sa.String(), nullable=True),
        sa.Column("interest_rate", sa.Float(), nullable=True),
        sa.Column("credit_method", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(["currency_id"], ["currencies.id"], name="currency"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name="user"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.execute("CREATE INDEX ix_accounts_name ON accounts (lower(name))")
    op.create_table(
        "subcategories",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("recurrent", sa.Boolean(), nullable=False),
        sa.Column("recurrence", sa.Enum("ONE", "DAY", "WEEK", "MONTH", "YEAR", name="recurrenceenum"), nullable=True),
        sa.Column("currency_id", sa.Integer(), nullable=True),
        sa.Column("recurrence_value", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["category_id"], ["categories.id"], name="category"),
        sa.ForeignKeyConstraint(["currency_id"], ["currencies.id"], name="currency"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("category_id", "name", name="uniq_category_subcategory"),
    )
    op.create_table(
        "incomes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("account_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False, unique=True),
        sa.Column("recurrence_value", sa.Integer(), nullable=False),
        sa.Column("currency_id", sa.Integer(), nullable=False),
        sa.Column("recurrent", sa.Boolean(), nullable=False),
        sa.Column("income_date", sa.DateTime(), nullable=True),
        sa.Column("recurrence", sa.Enum("ONE", "DAY", "WEEK", "MONTH", "YEAR", name="recurrenceenum"), nullable=True),
        sa.ForeignKeyConstraint(["account_id"], ["accounts.id"], name="account"),
        sa.ForeignKeyConstraint(["currency_id"], ["currencies.id"], name="currency"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name="user"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.execute("CREATE INDEX ix_incomes_name ON incomes (lower(name))")
    op.create_table(
        "transactions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("account_id", sa.Integer(), nullable=False),
        sa.Column("subcategory_id", sa.Integer(), nullable=False),
        sa.Column(
            "transaction_type", sa.Enum("Income", "Expense", "Transfer", name="transactiontypeenum"), nullable=False
        ),
        sa.Column("value", sa.Integer(), nullable=False),
        sa.Column("currency_id", sa.Integer(), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("target_account_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["accounts.id"],
        ),
        sa.ForeignKeyConstraint(["currency_id"], ["currencies.id"], name="currency"),
        sa.ForeignKeyConstraint(["subcategory_id"], ["subcategories.id"], name="subcategory"),
        sa.ForeignKeyConstraint(
            ["target_account_id"],
            ["accounts.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "usersubcategories",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("subcategory_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["subcategory_id"], ["subcategories.id"], name="subcategory"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name="user"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "subcategory_id", name="uniq_user_subcategory"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP INDEX ix_category_name")
    op.execute("DROP INDEX ix_currencies_name_symbol_code")
    op.execute("DROP INDEX ix_users_username")
    op.execute("DROP INDEX ix_accounts_name")
    op.execute("DROP INDEX ix_incomes_name")

    op.drop_table("usersubcategories")
    op.drop_table("transactions")
    op.drop_table("incomes")
    op.drop_table("subcategories")
    op.drop_table("accounts")
    op.drop_table("users")
    op.drop_table("currencies")
    op.drop_table("categories")
    # ### end Alembic commands ###
