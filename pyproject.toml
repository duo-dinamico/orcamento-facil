[tool.poetry]
name = "orcamento-facil"
version = "0.1.0"
description = "Programa de orçamentação pessoal."
authors = ["DuoDinamico"]
license = "GNU"
readme = "README.md"
packages = [{ include = "ezbudget", from = "src" }]
include = [{ path = "tests", format = "sdist" }]

[tool.poetry.dependencies]
python = "^3.12"
black = "^23.9.1"
sqlalchemy = "^2.0.22"
ruff = "^0.1.6"
ttkbootstrap = "^1.10.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
isort = "^5.12.0"
pre-commit = "^3.5.0"
taskipy = "^1.12.0"
mypy = "^1.7.0"

[tool.taskipy.tasks]
test = { cmd = "pytest -rP", help = 'run pytest on all files' }
lint = { cmd = "ruff check .", help = 'ruff all files' }
sort = { cmd = "isort -vc .", help = 'run isort in all files.' }


[tool.black]
line-length = 120
indent-width = 4
target-version = ['py311']
include = '(src\/scripts\/.*$|\.pyi?$)'
exclude = '''
/(
    \.git
  | __pycache__
  | \.venv
  | __init__
)/
'''

[tool.pytest.ini_options]
pythonpath = "src"
addopts = "-v"

[tool.isort]
profile = "black"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]

# Same as Black.
line-length = 120
indent-width = 4

target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.per-file-ignores]
# Ignore `F401` (import but unused) in all `__init__.py` files.
"__init__.py" = ["F401"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
